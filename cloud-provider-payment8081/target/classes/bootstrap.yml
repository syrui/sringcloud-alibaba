server:
  port: 8081

spring:
  application:
    name: cloud-payment-service
#  datasource:
#    type: com.alibaba.druid.pool.DruidDataSource            # 当前数据源操作类型
#    driver-class-name: org.gjt.mm.mysql.Driver              # mysql驱动包
#    url: jdbc:mysql://localhost:3306/gmall?useUnicode=true&characterEncoding=utf-8&useSSL=false
#    username: root
#    password: 137279
#  redis:
#    password: 123456
#    host: 192.168.106.128
#    database: 0
#    port: 6379
#    jedis:
#      pool:
#        max-active: 1000
#        min-idle: 5
#        max-idle: 10
#        max-wait: -1
  # redis链接地址

  cloud:
    nacos:
      discovery:
        server-addr: localhost:8848 #Nacos服务注册中心地址
      config:
        server-addr: localhost:8848 #Nacos作为配置中心地址
        file-extension: yaml #指定yaml格式的配置
        group: DEFAULT_GROUP
    sentinel:
      transport:
        dashboard: localhost:8080 #配置Sentinel dashboard地址
        port: 8719
      datasource:
        ds1:
          nacos:
            server-addr: localhost:8848
            dataId: cloud-payment-service
            groupId: DEFAULT_GROUP
            data-type: json
            rule-type: flow
#ribbon的超时时间
        ribbon:
          ReadTimeout: 3000
          ConnectTimeout: 3000
logging:
  level:
    # feign日志以什么级别监控哪个接口
    com.atguigu.springcloud.service.PaymentFeignService: debug
# ${spring.application.name}-${spring.profile.active}.${spring.cloud.nacos.config.file-extension}
# nacos-config-client-dev.yaml

# nacos-config-client-test.yaml   ----> config.info

##mybatis plus 配置
#mybatis-plus:
#  #多个路径以逗号隔开
#  mapper-locations: classpath:mapper/*Mapper.xml
#  #测试将mapper xml 放在外部中,使用file://+绝对路径
#  #mapper-locations: file://H:/mapper/*Mapper.xml
#  type-aliases-package: com.around.producer.mybatisplus.entity
#  #开启驼峰命名法
#  configuration:
#    # 是否开启自动驼峰命名规则映射:从数据库列名到Java属性驼峰命名的类似映射
#    map-underscore-to-camel-case: true
#    # 如果查询结果中包含空值的列，则 MyBatis 在映射的时候，不会映射这个字段
#    call-setters-on-nulls: true
#    # 这个配置会将执行的sql打印出来，在开发或测试的时候可以用
#    log-impl: org.apache.ibatis.logging.stdout.StdOutImpl
